第18课 循迹智能车
=================

|Img|

.. _1实验说明:

1.实验说明：
------------

前面我们学习了循迹传感器和电机驱动的原理和应用，下面我们要结合循迹传感器和电机驱动来做一款循迹小车。
循迹，意思就是循着轨迹，也就是我们经常会看到的走黑线的循迹小车，原理是利用循迹传感器对路面黑色轨迹进行检测，并将路面检测信号反馈给控制主板。控制板对采集到的信号予以分析判断，及时控制驱动电机以调整小车转向，从而使小车能够沿着黑色轨迹自动行驶，实现循迹小车自动寻迹的目的，我们来看看下面的流程图就清晰了：

.. _2实验原理:

2.实验原理：
------------

================ ================== ================ ============ ======
左红外循迹传感器 中间红外循迹传感器 右红外循迹传感器 值（二进制） 状态
================ ================== ================ ============ ======
0                0                  0                000          停止
0                0                  1                001          向右转
0                1                  0                010          直走
0                1                  1                011          向右转
1                0                  0                100          向左转
1                0                  1                101          停止
1                1                  0                110          向左转
1                1                  1                111          直走
================ ================== ================ ============ ======

|image1|

.. _3实验流程图:

3.实验流程图：
--------------

|image2|

.. _4实验准备:

4.实验准备：
------------

（1）将micro：bit主板正确插入4WD Micro:bit麦克纳姆轮智能小车。
（2）将电池装入4WD Micro:bit麦克纳姆轮智能小车。
（3）将电机驱动底板上的电源拨码开关拨到ON一端，开启电源。 （4）通过micro
USB线连接micro:bit主板和电脑。 （5）打开离线版本的Mu软件。

警告：3路循迹传感器应避免在阳光等有红外干扰的环境中使用。阳光中含有大量的不可见光，如红外线和紫外线。在阳光强烈的环境下，3路循迹传感器不能正常工作。

.. _5添加库文件:

5.添加库文件：
--------------

添加库文件的方法请参照Python教程中第13课的文件“第13课：七彩灯闪烁.py”，也可以参照“开发环境设置”文件夹中的文件“Mu
Editor 编译器教程”。

.. _6实验代码:

6.实验代码：
------------

库文件“keyes_mecanum_Car_V2.py”添加完后，可以直接在Mu编译器上传教程中的代码，也可以手动在Mu编译器编写代码。（注意！所有英文及符号均须以英文填写，最后一行必须有空格。）

添加代码到Mu编译器的教程与下载代码的教程请阅读“开发环境设置”文件夹中的文件“Mu
Editor 编译器教程”。

::

   from microbit import *
   from keyes_mecanum_Car_V2 import *
   mecanumCar = Mecanum_Car_Driver_V2()
   display.off()

   val_L = 0
   val_C = 0
   val_R = 0
   while True:
       val_L = pin3.read_digital()
       val_C = pin4.read_digital()
       val_R = pin10.read_digital()
       if val_C == 0:
           if val_L == 0 and val_R == 1:
               mecanumCar.Motor_Upper_L(1, 80)
               mecanumCar.Motor_Lower_L(1, 80)
               mecanumCar.Motor_Upper_R(0, 80)
               mecanumCar.Motor_Lower_R(0, 80)
           elif val_L == 1 and val_R == 0:
               mecanumCar.Motor_Upper_L(0, 80)
               mecanumCar.Motor_Lower_L(0, 80)
               mecanumCar.Motor_Upper_R(1, 80)
               mecanumCar.Motor_Lower_R(1, 80)
           else:
               mecanumCar.Motor_Upper_L(0, 0)
               mecanumCar.Motor_Lower_L(0, 0)
               mecanumCar.Motor_Upper_R(0, 0)
               mecanumCar.Motor_Lower_R(0, 0)
       else :
           if val_L == 0 and val_R == 1:
               mecanumCar.Motor_Upper_L(1, 80)
               mecanumCar.Motor_Lower_L(1, 80)
               mecanumCar.Motor_Upper_R(0, 80)
               mecanumCar.Motor_Lower_R(0, 80)
           elif val_L == 1 and val_R == 0:
               mecanumCar.Motor_Upper_L(0, 80)
               mecanumCar.Motor_Lower_L(0, 80)
               mecanumCar.Motor_Upper_R(1, 80)
               mecanumCar.Motor_Lower_R(1, 80)

.. _7实验结果:

7.实验结果：
------------

确定已经将电机驱动底板上的电源拨码开关拨到ON一端，点击“\ **刷入**\ ”将将代码下载到micro：bit主板。这样，循迹小车能随着黑色轨迹前行。

特别注意：

（1）小车循迹轨道，黑线的宽度必须大于等于3路循迹传感器模块的宽度，小车速度尽量应调低一些。

（2）测试小车时，不要在阳光明媚的太阳底下测试。测试过程中，如果出现问题，可在暗一点的环境中测试。

.. _8代码说明:

8.代码说明：
------------

+----------------------------------+----------------------------------+
| from microbit import \*          | 导入micro：bit的库               |
+==================================+==================================+
| from keyes_mecanum_Car_V2 import | 导入keyes_mecanum_Car_V2的库文件 |
| \*                               |                                  |
+----------------------------------+----------------------------------+
| mecanumCar =                     | 实例化一个对象Mec                |
| Mecanum_Car_Driver_V2()          | anum_Car_Driver_V2()为mecanumCar |
+----------------------------------+----------------------------------+
| display.off()                    | micro:bit上的LED点阵关闭显示     |
+----------------------------------+----------------------------------+
| val_L = 0                        | 设置变量初始值为0                |
+----------------------------------+----------------------------------+
| while True:                      | 这是一个永久循环，它使mi         |
|                                  | cro：bit永远执行这个循环中的代码 |
+----------------------------------+----------------------------------+
| val_L = pin3.read_digital()      | 将接在P3控制口的TCRT5000红外对   |
|                                  | 管读取的数字信号赋给于变量val_L  |
+----------------------------------+----------------------------------+
| if val_C == 0:                   | 如果中间为0时：                  |
+----------------------------------+----------------------------------+
| if val_L == 0 and val_R == 1:    | 如果val_L = 0 且 val_R =1成立时  |
+----------------------------------+----------------------------------+
| elif val_L == 1 and val_R == 0:  | 否则如果val_L = 1 且 val_R       |
|                                  | =0成立时                         |
+----------------------------------+----------------------------------+
| mecanumCar.Motor_Upper_L(1, 80)  | 智能车的左前电机以PWM            |
|                                  | 80的速度正转                     |
+----------------------------------+----------------------------------+
| mecanumCar.Motor_Upper_R(0, 80)  | 智能车的右前电机以PWM            |
|                                  | 80的速度反转                     |
+----------------------------------+----------------------------------+

.. |Img| image:: ./media/img-20230426170747.png
.. |image1| image:: ./media/img-20230523171931.png
.. |image2| image:: ./media/img-20230426171120.png
